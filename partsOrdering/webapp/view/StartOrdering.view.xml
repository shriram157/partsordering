<mvc:View controllerName="tci.wave2.ui.parts.ordering.controller.StartOrdering" xmlns:html="http://www.w3.org/1999/xhtml"	
xmlns:core="sap.ui.core"  xmlns:mvc="sap.ui.core.mvc" xmlns:l="sap.ui.layout" xmlns:f="sap.ui.layout.form" displayBlock="true" xmlns="sap.m">
	<Page id="floatingFooterPage"  showNavButton="false" floatingFooter="true" xmlns:custom="tci.wave2.ui.parts.ordering.utils">
		<customHeader>
			<core:Fragment fragmentName="tci.wave2.ui.parts.ordering.view.fragments.TopHeader" type="XML"/>
		</customHeader>	
		<core:Fragment fragmentName="tci.wave2.ui.parts.ordering.view.fragments.ToolHeader" type="XML"/>
		<content>
			<Panel>
				<FlexBox height="450px" alignItems="Center" justifyContent="Center">
					<items>
						<f:SimpleForm editable="true" layout="ResponsiveGridLayout" visible='{orderTypeListModel>/displayUi}' >
							<f:content>
								<core:Title text="{i18n>Title.StartOrdering.orderandtype}"/>
								<Label text="{i18n>Label.StartOrdering.Order.Type}" required='true' id='__order_type'/>
								<Select width="100%" 
									forceSelection="false"
									change="onOrderTypeChange"
									id='orderTypeInput'
									selectedKey='{/selectedOrderMeta/order_type}'
									items="{
										path: 'orderTypeListModel>/typeList'
									}">
									<!-->sorter: { path: 'name' }</-->
									<core:Item key="{orderTypeListModel>code}" text="{orderTypeListModel>name}" />
								</Select>									
								<Label text="{i18n>Label.StartOrdering.Order.ID}" labelFor='orderNumberInput' />
								<Input  width="100%" required="true" type='Text' id='orderNumberInput'
									value="{
												path : '/selectedOrderMeta/order_id',
												type: 'sap.ui.model.type.String',
												constraints : { minLength : 2, maxLength : 20, nullable:false }
									}"
								/>
								
								<Label text="{i18n>Label.ContractNumber}" labelFor='contractNumInp' />
								<custom:CustomInputDecimal maxLength="10" value="{ path : '/selectedOrderMeta/contract_num', type: 'sap.ui.model.type.String', contraints:'{minLength:1 , maxLength:10}' }" 
										valueStateText="{i18n>ValidationMessage.contractNum}" placeholder="{i18n>Placeholder.contractNum}" visible="{/selectedOrderMeta/typeB}"
										required='false' valueState="None"/>
								
							</f:content>
						</f:SimpleForm>					
					</items>
				</FlexBox>
			</Panel>
		</content>
		<footer>
			<OverflowToolbar>
				<Button 
					icon="sap-icon://message-popup" 
                    text="{=${message>/}.length}"
                    visible="{=${message>/}.length > 0}"
					type="Emphasized" 
					press="handleMessagePopoverPress"/>
				<ToolbarSpacer/>
				<Button type="Back" text="{i18n>Button.Back}" press='onBack'/>					
				<Button type="Emphasized" press="onCreateOrder" text="{i18n>Button.StartOrdering.StartOrdering}"/>
			</OverflowToolbar>
		</footer>
	</Page>			
</mvc:View>